@{
    ViewBag.Title = ViewBag.Topic.Name;
    ViewBag.Description = ViewBag.Topic.Description;
    ViewBag.GetRequest = "lesson";
    ViewBag.ColContentClasses = "col-md-12";
}
@if (User.Identity.IsAuthenticated)
{
    <script>var auth = true;</script>
}
else
{
    <script>var auth = false;</script>
}

<script>
    if (auth !== true) {
        document.location.href = '/Account/Login';
    }
</script>

<link rel="stylesheet" href="~/board/css/new_chessboard.css" />
<script src="~/board/js/new_chessboard.js?v=101"></script>
<script src="~/board/js/chess.js"></script>

<div class="col-md-7 order_1">
    <div class="shess-board-wrapper">
        <div id="board" style="width: 100%;"></div>
        <!--<p>Status: <span id="status"></span></p>-->
    </div>
</div>
<div class="col-md-5 page--game">
    <div class="m_show_panels_wrapper">
        <div class="m_show_panels_container">
            <div class="m_show_panel-item">
                <button class="btn2 btn2-grey v___BtnRestart" onclick="Restart()" disabled="">
                    <i class="fas fa-arrow-left"></i>
                </button>
                <button class="btn2 btn2-orange v___BtnNext" onclick="NextStep()" disabled="">
                    <i class="fas fa-arrow-right"></i>
                </button>
                <button class="btn2 btn2-blue" onclick="Help()">
                    <i class="fas fa-question"></i>
                </button>
                <button class="btn2 btn2-default" onclick="modal_open('settings');" data-placement="auto" title="Настройки доски">
                    <i class="fas fa-cogs"></i>
                </button>
            </div>
            <div id="show_panel_wrp_1" class="m_show_panel-item"><span>Описание урока</span></div>
        </div>
    </div>
    <div id="panel_wrp_1" class="panel-wrapper m_hide-wrapper">
        <div class="panel bg-panel">
            <div class="panel__close">
                <span class="link-item">
                    <img src="https://img.icons8.com/windows/22/000000/delete-sign.png">
                </span>
            </div>
            <div class="panel__scroll-wrapper">
                <img src="~/img/piece5.png" alt="panel-img" class="panel-figure">
                <div class="panel-title">
                    <span><a href="/Lessons/Lesson/@ViewBag.Topic.Lesson_ID"><b>Урок #@ViewBag.Topic.Lesson.OrderNumb. @ViewBag.Topic.Lesson.Name</b></a></span>
                </div>
                <div class="panel-part__title">
                    <span><b>Часть #@ViewBag.Topic.OrderNumb. @ViewBag.Topic.Name</b></span>
                </div>
                <div id="Desc" class="fix-height">
                    @ViewBag.Topic.Description
                    <hr />
                    @ViewBag.Topic.FirstStep.Description
                </div>
                <div class="flx" style="margin-top: 10px;">
                    <div>
                        <button class="btn2 btn2-circle btn2-orange btn__restart v___BtnRestart" onclick="Restart()" disabled="">
                            <img src="~/img/arrow-right.png" alt="">
                        </button>
                        <button class="btn2 btn2-circle btn2-blue btn__next v___BtnNext" onclick="NextStep()" disabled="">
                            <img src="~/img/arrow-right.png" alt="">
                        </button>
                    </div>
                    <div>
                        <button class="btn2 btn2-circle btn2-grey question__btn" onclick="Help()">
                            <i class="fas fa-question"></i>
                        </button>
                        <button class="btn2 btn2-circle btn2-default settings__btn" onclick="modal_open('settings');" data-placement="auto" title="Настройки доски">
                            <i class="fas fa-cogs"></i>
                        </button>
                    </div>
                </div>
                <!--
                <div style="margin-top: 10px;" class="btns_show_moves">
                    <button class="btn2 btn2-default" onclick="startMove()"><i class="fas fa-angle-double-left"></i></button>
                    <button class="btn2 btn2-default" id="prev_move" onclick="prevMove()"><i class="fas fa-angle-left"></i></button>
                    <button class="btn2 btn2-default" id="next_move" onclick="nextMove()"><i class="fas fa-angle-right"></i></button>
                    <button class="btn2 btn2-default" onclick="endMove()"><i class="fas fa-angle-double-right"></i></button>
                </div>
                -->
            </div>
        </div>
    </div>
    <img src="~/img/piece1.png" alt="">
</div>
<script>
    var game;
    var lastFen = '';
    var Topic_ID = @ViewBag.Topic.ID;
    var stnumb = 0, desc = '', IsLastStep = true;
    var step = 0, Step_ID = 0;
    var move = 0, Move_ID = 0;

    var curPosition = '@ViewBag.Topic.Position';
    var board = ChessBoard('board', curPosition);
    var CorrectMoveFro = false;
    var squareToHighlight;
    var colorToHighlight;
    var game_history_fen = [];
    var boardEl = $('#board');
    var statusEl = $('#status');
    var fenEl = $('#fen');
    var userCBColor = '@ViewBag.Topic.Orientation';
    board.orientation(userCBColor);
    //Пропускаем описание топика, идем сразу в 1-ый шаг
    $(document).ready(function () { NextStep(); });
    function NextStep() {
        $('.v___BtnNext').prop("disabled", true);
        desc = $('#Desc').html();
        GetStep(++stnumb);
    }
    function Restart() {
        if ($('.v___BtnRestart').prop("disabled")) {
            console.log('кнопка ресет НЕ активна - не делаем вызврат');
            return;
        }
        else {
            console.log('активна - возвращаемся в позицию начала');
            $('.v___BtnRestart').prop("disabled", true);
            GetStep(stnumb);
        }
    }
    function GetStep(stnumb) {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetStep")',
            data: { "Topic_ID": Topic_ID, "stepNumber": stnumb },
            dataType: 'json',
            success: function (res) {
                console.log(res);
                IsLastStep = (res.IsLastStep === 1);
                Step_ID = res.ID;
                if (Step_ID === 0) {
                    if (res.NextTopicID === 0)
                        document.location.href = '/Lessons';
                    else
                        document.location.href = '/Lessons/Topic/' + res.NextTopicID;
                    return;
                }
                $('#Desc').html(desc.replace('<!--$-->', '<br>' + res.Description));

                curPosition = res.Position + ' ' + board.orientation()[0] + ' KQkq - 0 1';
                init();
                (new Audio("/img/standUp.mp3")).play();
            },
            error: function (emp) {
                alert('error in GetStep');
            }
        });
    }
    function GetMoveResult(position) {
       $.ajax({
            type: 'GET',
            url: '@Url.Action("GetMoveResult")',
            data: { "new_position_after_move": position, "Step_ID": Step_ID },
            dataType: 'json',
           success: function (res)
           {
                if (res.Correctness === 1)
                {
                    $('#Desc').html('<font color="green" size=5 > ' + LastMove + '</font> - ' + res.Description +
                        '<!--$--><!--div style="opacity:0.1;">' + $('#Desc').html() + '</div-->');
                    $('.v___BtnNext').prop("disabled", false);
                    (new Audio("/img/standUp.mp3")).play();

                    if (!IsLastStep) setTimeout('NextStep()', 600);
                }
                else if (res.Correctness === 2) {
                    $('#Desc').html('<font color="Yellow" size=5>' + LastMove + '</font> - ' + res.Description +
                        '<!--$--><!--div style="opacity:0.3;">' + $('#Desc').html() + '</div-->');
                    desc = $('#Desc').html();

                    $('.v___BtnRestart').removeAttr('disabled');
                    (new Audio("/img/error.mp3")).play();
                }
                else if (res.Correctness === 3 || res.Correctness === 0) {
                    $('#Desc').html('<font color="red" size=5>' + LastMove + '</font> - ' + res.Description +
                        '<!--$--><!--div style="opacity:0.3;">' + $('#Desc').html() + '</div-->');
                    desc = $('#Desc').html();

                    $('.v___BtnRestart').removeAttr('disabled');
                    new Audio("/img/error.mp3").play();
                    setTimeout('Restart()', 3000);
                }
            },
            error: function (emp) {
                alert('error');
            }
        });
    }
    var PIECE= {B: "С",K: "Кр",N: "К",P: "П",Q: "Ф",R: "Л"};

    // do not pick up pieces if the game is over
    // only pick up pieces for the side to move
    var onDragStart = function (source, piece, position, orientation) {
        if (game.game_over() === true ||
            (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
            (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
            return false;
        }
    };
    var onDrop = function (source, target) {
        removeGreySquares();
        // see if the move is legal
        var move = game.move({
            from: source,
            to: target,
            promotion: 'q' // NOTE: always promote to a queen for example simplicity
        });
        // illegal move
        if (move === null) return 'snapback';
        updateStatus();
        LastMove = game.history()[0];
        if (PIECE[LastMove[0]] != undefined)
            LastMove = PIECE[LastMove[0]] + LastMove.substring(1);
        squareHighlight();
        GetMoveResult(game.fen());
    };
    // update the board position after the piece snap
    // for castling, en passant, pawn promotion
    var onSnapEnd = function () {
        board.position(game.fen());
    };
    var updateStatus = function () {
        var status = '';
        var moveColor = 'White';
        if (game.turn() === 'b')
            moveColor = 'Black';
        // checkmate?
        if (game.in_checkmate() === true)
            status = 'Game over, ' + moveColor + ' is in checkmate.';
        // draw?
        else if (game.in_draw() === true)
            status = 'Game over, drawn position';
        // game still on
        else {
            status = moveColor + ' to move';
            // check?
            if (game.in_check() === true)
                status += ', ' + moveColor + ' is in check';
        }
        statusEl.html(status);
        fenEl.html(game.fen());
        //pgnEl.html(game.pgn());
    };
    var onMoveEnd = function() {
        boardEl.find('.cb_square-' + squareToHighlight).addClass('cb_highlight-' + colorToHighlight);
    };
    var removeGreySquares = function() {
        $('#board .cb_square').removeClass(['cb_overlay_l', 'cb_overlay_d']);
    };
    var greySquare = function(square) {
        var squareEl = $('#board .cb_square-' + square);
        var cls = 'cb_overlay_l';
        if (squareEl.hasClass('cb_black') === true)
            cls = 'cb_overlay_d';
        squareEl.addClass(cls);
    };
    var onMouseoverSquare = function(square, piece) {
        // get list of possible moves for this square
        var moves = game.moves({
            square: square,
            verbose: true
        });
        // exit if there are no moves available for this square
        if (moves.length === 0) return;
        // highlight the square they moused over
        if(!$('.cb_square-' + square).hasClass('cb_piece--active') && $('.cb_square').hasClass('cb_piece--active'))
            return;
        greySquare(square);
        // highlight the possible squares for this piece
        for (var i = 0; i < moves.length; i++) {
            greySquare(moves[i].to);
        }
    };
    var onMouseoutSquare = function(square, piece) {
        if($('.cb_square').hasClass('cb_piece--active')) {
            removeGreySquares();
            onMouseoverSquare($('.cb_square.cb_piece--active').attr('data-square'), null);
        } else
            removeGreySquares();
    };
    var squareHighlight = function() {
        var history = game.history({verbose: true});
        var hlen = history.length;
        if(hlen === 0) return;
        boardEl.find('.cb_square').removeClass(['cb_highlight-black', 'cb_highlight-white']);
        if (history[hlen-1].color === 'w') {
            boardEl.find('.cb_square-' + history[hlen-1].from).addClass('cb_highlight-white');
            squareToHighlight = history[hlen-1].to;
            colorToHighlight = 'white';
            boardEl.find('.cb_square-' + squareToHighlight).addClass('cb_highlight-' + colorToHighlight);
        }
        else {
            boardEl.find('.cb_square-' + history[hlen-1].from).addClass('cb_highlight-black');
            squareToHighlight = history[hlen-1].to;
            colorToHighlight = 'black';
            boardEl.find('.cb_square-' + squareToHighlight).addClass('cb_highlight-' + colorToHighlight);
        }
    };
    var init = function () {
        game = new Chess();
        var vf = game.validate_fen(curPosition);
        if (!vf.valid) {
            alert('Не правильно задана позиция!\n' + curPosition+'\n\rОшибка:'+vf.error);
            return;
        }
        game.load(curPosition);
        var cfg = {
            draggable: true,
            position: curPosition,
            onDragStart: onDragStart,
            onDrop: onDrop,
            onSnapEnd: onSnapEnd,
            onMoveEnd: onMoveEnd,
            onMouseoutSquare: onMouseoutSquare,
            onMouseoverSquare: onMouseoverSquare,
            orientation: '@ViewBag.Topic.Orientation'
        };
        board = ChessBoard('board', cfg);

        squareHighlight();

        updateStatus();
    }
</script>

<!-- Event snippet for Регистрация на сайте conversion page -->
<script>gtag('event', 'conversion', { 'send_to': 'AW-738762129/4T8ECLWcjKEBEJG7ouAC' });</script>
