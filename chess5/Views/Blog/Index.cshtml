<style>
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:14.0pt;
	font-family:"Times New Roman",serif;}
code
	{font-family:"Courier New";}
pre
	{mso-style-link:"Стандартный HTML Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Courier New";}
</style>


    <div class="content__header">
        <div class="content__panel" style="padding:15px">

            <div class=WordSection1>

                <p class=MsoNormal style='margin-bottom:18.0pt;line-height:30.0pt'>
                    <span lang=EN-US style='font-size:24.0pt;font-family:"Arial",sans-serif'>
                        Introduction
                        to Push Notifications
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:36.0pt;margin-right:0cm;margin-bottom:
18.0pt;margin-left:0cm;line-height:24.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:18.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        What are
                        Push Notifications?
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        A
                        notification is a message that pops up on the user's device. Notifications can
                        be triggered locally by an open application, or they can be &quot;pushed&quot;
                        from the server to the user even when the app is not running. They allow your
                        users to opt-in to timely updates and allow you to effectively re-engage users
                        with customized content.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Push
                        Notifications are assembled using two APIs: the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API">
                            <span lang=EN-US style='color:#1A73E8'>Notifications API</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;and
                        the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/Push_API">
                            <span lang=EN-US style='color:#1A73E8'>Push API</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        . The
                        Notifications API lets the app display system notifications to the user. The
                        Push API allows a service worker to handle Push Messages from a server, even
                        while the app is not active.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        Notification and Push API's are built on top of the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">
                            <span lang=EN-US style='color:#1A73E8'>Service Worker API</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        ,
                        which responds to push message events in the background and relays them to your
                        application.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;Service
                        workers require secure origins so testing Push Notifications requires running a
                        local server.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:36.0pt;margin-right:0cm;margin-bottom:
18.0pt;margin-left:0cm;line-height:24.0pt;background:white'>
                    <span style='font-size:18.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Push
                        Notification Terms
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Notification</span>
                    </b><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;– a message displayed to
                        the user outside of the app's normal UI (i.e., the browser)
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Push Message</span>
                    </b><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;– a message sent from the
                        server to the client
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Push Notification</span>
                    </b><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;– a notification
                        created in response to a push message
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Notifications API</span>
                    </b><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;– an interface used
                        to configure and display notifications to the user
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Push API</span>
                    </b><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;– an interface used to
                        subscribe your app to a push service and receive push messages in the service
                        worker
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Web Push</span>
                    </b><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;– an informal term
                        referring to the process or components involved in the process of pushing
                        messages from a server to a client on the web
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Push Service</span>
                    </b><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;– a system for routing push
                        messages from a server to a client.
                    </span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        Each browser implements its own
                        push service.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Web Push Protocol</span>
                    </b><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;– describes how an
                        application server or user agent interacts with a push service
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:36.0pt;margin-right:0cm;margin-bottom:
18.0pt;margin-left:0cm;line-height:24.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:18.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Understanding
                        Push Notifications on the web
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Push
                        notifications let your app extend beyond the browser, and are an incredibly
                        powerful way to engage with the user. They can do simple things, such as alert
                        the user to an important event, display an icon and a small piece of text that
                        the user can then click to open up your site. You can also integrate action
                        buttons in the notification so that the user can interact with your site or
                        application without needing to go back to your web page.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        There are
                        several pieces that come together to make push notifications work. Browsers
                        that support web push each implement their own push service, which is a system
                        for processing messages and routing them to the correct clients. Push messages
                        destined to become notifications are sent from a server directly to the push
                        service, and contain the information necessary for the push service to send it
                        to the right client and wake up the correct service worker. The section on
                        the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://developers.google.com/web/ilt/pwa/introduction-to-push-notifications#pushapi">
                            <span lang=EN-US style='color:#1A73E8'>Push API</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;describes
                        this process in detail.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When it
                        receives a message, the service worker wakes up just long enough to display the
                        notification and then goes back to sleep. Because notifications are paired with
                        a service worker, the service worker can listen for notification interactions
                        in the background without using resources. When the user interacts with the
                        notification, by clicking or closing it, the service worker wakes up for a
                        brief time to handle the interaction before going back to sleep.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:36.0pt;margin-right:0cm;margin-bottom:
18.0pt;margin-left:0cm;line-height:24.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:18.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Notifications
                        API
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>The&nbsp;</span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API">
                            <span lang=EN-US style='color:#1A73E8'>Notifications API</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;lets
                        us display notifications to the user. It is incredibly powerful and simple to
                        use. Where possible, it uses the same mechanisms a native app would use, giving
                        a completely native look and feel.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We can
                        split the Notifications API into two core areas (these are non-technical and
                        are not part of the spec). The *Invocation API * controls how to make your
                        notification appear, including styling and vibration. We create (or invoke) the
                        notification from the page (or from the server, in the case of push
                        notifications). The&nbsp;<i>Interaction API</i>&nbsp;controls what happens when
                        the user engages with the notification. User interaction is handled in the service
                        worker.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Request
                        permission
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Before we
                        can create a notification we need to get permission from the user. Below is the
                        code to prompt the user to allow notifications. This goes in the app's main
                        JavaScript file.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#9C27B0'>Notification</span><span lang=EN-US
                                                      style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>.requestPermission(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (status)
                        {<br>
                        &nbsp; &nbsp; console.log(
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'Notification permission status:'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,
                        status);<br>
                        });<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We call
                        the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission">
                            <span lang=EN-US style='font-size:11.0pt;font-family:"Courier New";color:#1A73E8;
background:#F1F3F4;text-decoration:none'>requestPermission</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method
                        on the global Notification object. This displays a pop-up message from the
                        browser requesting permission to allow notifications. The user's response is
                        stored along with your app, so calling this again returns the user's last
                        choice. Once the user grants permission, the app can display notifications.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Display a
                        notification
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We can
                        show a notification from the app's main script with the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification">
                            <span lang=EN-US style='font-size:11.0pt;font-family:"Courier New";color:#1A73E8;
background:#F1F3F4;text-decoration:none'>showNotification</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method
                        (the &quot;Invocation API&quot;). Here is an example:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        displayNotification() {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> (</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#9C27B0'>Notification</span><span lang=EN-US
                                                                  style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .permission ==
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>'granted'</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; navigator.serviceWorker.getRegistration().
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (reg)
                        {<br>
                        &nbsp; &nbsp; &nbsp; reg.showNotification(
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'Hello world!'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        );<br>
                        &nbsp; &nbsp; });<br>
                        &nbsp; }<br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Notice
                        the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>showNotification</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method is called on
                        the service worker registration object. This creates the notification on the
                        active service worker, so that events triggered by interactions with the
                        notification are heard by the service worker.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;You
                        can also create a notification using a&nbsp;
                    </span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification">
                            <span lang=EN-US style='color:#01579B;background:#E1F5FE'>notification constructor</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        .
                        However, a notification created this way is not paired with a service worker
                        and is therefore not interactive.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Add
                        notification options
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>The&nbsp;</span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>showNotification</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method
                        has an optional second argument for configuring the notification. The following
                        example code demonstrates some of the available options. See the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification">
                            <span lang=EN-US style='color:#1A73E8'>showNotification reference on MDN</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;for
                        a complete explanation of each option.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        displayNotification() {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> (</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#9C27B0'>Notification</span><span lang=EN-US
                                                                  style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .permission ==
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>'granted'</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; navigator.serviceWorker.getRegistration().
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (reg)
                        {<br>
                        &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>var</span><span lang=EN-US
                                                         style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        options = {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; body:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>'Here is a notification body!'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; icon:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>'images/example.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; vibrate: [
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#C53929'>100</span><span lang=EN-US
                                                                style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>50</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>100</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ],<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; data: {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dateOfArrival:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Date</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .now(),<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; primaryKey:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>1</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        &nbsp; &nbsp; &nbsp; &nbsp; }<br>
                        &nbsp; &nbsp; &nbsp; };<br>
                        &nbsp; &nbsp; &nbsp; reg.showNotification(
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'Hello world!'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,
                        options);<br>
                        &nbsp; &nbsp; });<br>
                        &nbsp; }<br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>The&nbsp;</span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>body</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;option adds a main
                        description to the notification. It should give the user enough information to
                        decide how to act on it.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>The&nbsp;</span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>icon</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;option attaches an
                        image to make the notification more visually appealing, but also more relevant
                        to the user. For example, if it's a message from their friend you might include
                        an image of the sender's avatar.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>The&nbsp;</span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>vibrate</span><span lang=EN-US
                                                      style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;option
                        specifies a vibration pattern for a phone receiving the notification. In our
                        example, a phone would vibrate for 100 milliseconds, pause for 50 milliseconds,
                        and then vibrate again for 100 milliseconds.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>The&nbsp;</span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>data</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;option attaches
                        custom data to the notification, so that the service worker can retrieve it
                        when the user interacts with the notification. For instance, adding a unique
                        &quot;id&quot; or &quot;key&quot; option to the data allows us to determine
                        which notification was clicked when the service worker handles the click event.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Here is
                        a&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://tests.peter.sh/notification-generator/">
                            <span lang=EN-US style='color:#1A73E8'>useful tool</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;that
                        allows you to experiment with all of the different notification options.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Add
                        actions to the notification
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Simple
                        notifications display information to the user and handle basic interactions
                        when clicked. This is a massive step forward for the web, but it's still a bit
                        basic. We can add contextually relevant actions to the notification so the user
                        can quickly interact with our site or service without opening a page. For
                        example:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        displayNotification() {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> (</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#9C27B0'>Notification</span><span lang=EN-US
                                                                  style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .permission ==
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>'granted'</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; navigator.serviceWorker.getRegistration().
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (reg)
                        {<br>
                        &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>var</span><span lang=EN-US
                                                         style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        options = {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; body:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>'Here is a notification body!'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; icon:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>'images/example.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; vibrate: [
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#C53929'>100</span><span lang=EN-US
                                                                style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>50</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>100</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ],<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; data: {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dateOfArrival:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Date</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .now(),<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; primaryKey:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>1</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        &nbsp; &nbsp; &nbsp; &nbsp; },<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; actions: [<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {action:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'explore'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,
                        title:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>'Explore this new world'</span><span lang=EN-US
                                                    style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; icon:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'images/checkmark.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        },<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {action:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'close'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,
                        title:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>'Close notification'</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; icon:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'images/xmark.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        },<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; ]<br>
                        &nbsp; &nbsp; &nbsp; };<br>
                        &nbsp; &nbsp; &nbsp; reg.showNotification(
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'Hello world!'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,
                        options);<br>
                        &nbsp; &nbsp; });<br>
                        &nbsp; }<br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        To create
                        a notification with a set of custom actions, we add an actions array inside the
                        notification options object. This array contains a set of objects that define
                        the action buttons to show to the user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Actions
                        can have an identifier string, a title containing text to be shown to the user,
                        and an icon containing the location of an image to be displayed next to the
                        action.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Listen
                        for events
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Displaying
                        a notification was the first step. Now we need to handle user interactions in
                        the service worker (using the &quot;Interaction API&quot;). Once the user has
                        seen your notification they can either&nbsp;<i>dismiss</i>&nbsp;it or&nbsp;<i>
                            act
                            on
                        </i>&nbsp;it.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        notificationclose event
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        If the
                        user dismisses the notification through a direct action on the notification
                        (such as a swipe in Android), it raises a&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>notificationclose</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;event
                        inside the service worker.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;If
                        the user dismisses all notifications then, to save resources, an event is not
                        raised in the service worker.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        This
                        event is important because it tells you how the user is interacting with your
                        notifications. You might, for example, log the event to your analytics
                        database. Or, you might use the event to synchronize your database and avoid
                        re-notifying the user of the same event.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Here is
                        an example of a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>notificationclose</span><span lang=EN-US
                                                                style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;event
                        listener in the service worker:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>.addEventListener(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'notificationclose'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (e)
                        {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        notification = e.notification;<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        primaryKey = notification.data.primaryKey;<br>
                        <br>
                        &nbsp; console.log(
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#0D904F'>'Closed notification: '</span><span lang=EN-US
                                                                 style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        + primaryKey);<br>
                        });<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We can
                        access the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/notification">
                            <span lang=EN-US style='color:#1A73E8'>notification object</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;from
                        the event object. From there we can get the data and decide how to respond. In
                        the example, we are getting the&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>primaryKey</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;property
                        defined earlier and logging it to the console.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        notificationclick event
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The most
                        important thing is to handle when the user clicks on the notification. The
                        click triggers a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>notificationclick</span><span lang=EN-US
                                                                style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;event
                        inside your service worker.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Let's
                        look at the code to handle the click event in the service worker.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>.addEventListener(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'notificationclick'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (e)
                        {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        notification = e.notification;<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        primaryKey = notification.data.primaryKey;<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        action = e.action;<br>
                        <br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> (action === </span><span lang=EN-US
                                                       style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'close'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; notification.close();<br>
                        &nbsp; }
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>else</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        {<br>
                        &nbsp; &nbsp; clients.openWindow(
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'http://www.example.com'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        );<br>
                        &nbsp; &nbsp; notification.close();<br>
                        &nbsp; }<br>
                        });<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We can
                        determine what action button the user clicked by inspecting the action property
                        on the event object.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When a
                        user clicks on a notification they usually expect to be taken directly to where
                        they can get more information about the notification. You can open a new window
                        by calling&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>clients.openWindow</span><span lang=EN-US
                                                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;in
                        your&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>notificationclick</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;handler and passing
                        in the URL where you want the user to navigate.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Notice we
                        check for the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>close</span><span lang=EN-US
                                                    style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;action
                        first and handle the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>explore</span><span lang=EN-US
                                                      style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;action
                        in an&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>else</span><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;block. This is a best
                        practice as not every platform supports action buttons, and not every platform
                        displays all your actions. Handling actions in this way provides a default
                        experience that works everywhere.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:36.0pt;margin-right:0cm;margin-bottom:
18.0pt;margin-left:0cm;line-height:24.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:18.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Designing
                        with the future in mind
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>The&nbsp;</span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://notifications.spec.whatwg.org/">
                            <span lang=EN-US
                                  style='color:#1A73E8'>notification spec</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;is
                        constantly evolving with the authors and browser vendors constantly adding new
                        features and increasing the possibilities of what you can do with the
                        Notifications API.
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Note that:</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        Not all browsers implement the Notifications API to the same
                        level
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        Operating systems may not support the same features for
                        notifications
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We need
                        to build our sites and apps defensively, yet progressively so that our
                        experiences work well everywhere. Let's look at what we can do to create a
                        consistent experience.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Check for
                        Support
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The web
                        is not yet at the point where we can build apps that depend on web
                        notifications. When possible, design for a lack of notification support and
                        layer on notifications.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        simplest thing to do is detect if the ability to send notifications is available
                        and, if it is, enable that part of the user's experience:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'> (</span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'Notification'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>in</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        window &amp;&amp; navigator.serviceWorker) {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#D81B60'>// Display the UI to let the user toggle notifications</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Here are
                        some things you can do when the user's browser doesn't support the
                        Notifications API:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        Offer a simple inline &quot;notification&quot; on your web page.
                        This works well when the user has the page open.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        Integrate with another service, such as an SMS provider or email
                        provider to provide timely alerts to the user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Check for
                        permission
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Always
                        check for permission to use the Notifications API. It is important to keep
                        checking that permission has been granted because the status may change:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'> (</span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Notification</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .permission
                        ===
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;granted&quot;</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#D81B60'>/* do our magic */</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        <br>
                        }
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>else</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>if</span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> (</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Notification</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .permission
                        ===
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;blocked&quot;</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#D81B60'>/* the user has previously denied push. Can't reprompt. */</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        }
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>else</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#D81B60'>/* show a prompt to the user */</span><span lang=EN-US
                                                           style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Cross-platform
                        differences
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        action buttons and images differ significantly across platforms. For example,
                        some OSs may display a limited number of actions and others may not make
                        actions directly visible to the user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        You can
                        check the maximum number of action buttons that can be displayed by
                        calling&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>Notification.maxActions</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        .
                        Do this when you create notifications so you can adapt them if needed. You can
                        also check this in the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>notificationclick</span><span lang=EN-US
                                                                style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;handler
                        in the service worker to determine the right response.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        A good
                        practice is to assume that the system cannot support any actions other than the
                        notification click. This means that you must design your notification to handle
                        the default click and have it execute the default response. You can then layer
                        on some customization for each action.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Decide if
                        the context of each action requires buttons to be grouped together. If you have
                        a binary choice, such as accept and decline, but can only display one button,
                        you may decide to not display buttons.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Finally,
                        treat every attribute of the notification other than&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>title</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>&nbsp;and&nbsp;</span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>body</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;as
                        optional and at the discretion of the browser and the operating system to use.
                        For example, don't rely on images being present in the notification. If you are
                        using the image to display contextual information (such as a photo of a
                        person), be sure to display that information in the title or the body so the
                        user can determine the importance of the notification if the image is not
                        visible.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Button
                        labels should be clear and concise. Although action buttons can have images,
                        not every system can display them.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Also,
                        don't rely on vibrations to notify the user. Many systems can't vibrate, or
                        won't vibrate if the user has their device volume muted.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:36.0pt;margin-right:0cm;margin-bottom:
18.0pt;margin-left:0cm;line-height:24.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:18.0pt;font-family:"Arial",sans-serif;color:#202124'>Push API</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We have
                        learned how to create a notification and display it to the user directly from a
                        web page. This is great if you want to create notifications when the page is
                        open, but what if the page isn't open? How can you create a notification that
                        alerts the user of some important information?
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Native
                        apps have been able to do this for a long time using a technology called Push
                        Messaging. We can now do the same on the web through the Push API.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;Push
                        and notification are different but complementary functions. A push is the
                        action of the server supplying message information to a service worker; a
                        notification is the action of the service worker sending the information to a
                        user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Push
                        messaging lets developers engage users by providing timely and customized
                        content outside the context of the web page. It is one of the most critical
                        APIs to come to the web, giving users the ability to engage with web
                        experiences even when the browser is closed, without the need for a native app
                        install.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        There are
                        many moving parts to web push that involve client-side management and also
                        server management. We are primarily going to focus on the client-side aspects
                        of web push as it relates to push notifications (the Push API). We'll leave the
                        server-side details to commercial services that we will provide links to.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        How Web
                        Push works
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Let's
                        walk through an overview of how web push works.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Each
                        browser manages push notifications through their own system, called a
                        &quot;push service&quot;. When the user grants permission for Push on your
                        site, you can then subscribe the app to the browser's push service. This
                        creates a special subscription object that contains the &quot;endpoint
                        URL&quot; of the push service, which is different for each browser, and a
                        public key (see the example below). You send your push messages to this URL,
                        encrypted with the public key, and the push service sends it to the right
                        client. A typical subscription object looks like this:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>{</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>&quot;endpoint&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>:</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;https://fcm.googleapis.com/fcm/send/dpH5lCsTSSM:APA91bHqjZxM0VImWWqDRN7U0a3AycjUf4O-byuxb_wJsKRaKvV_iKw56s16ekq6FUqoCF7k2nICUpd8fHPxVTgqLunFeVeB9lLCQZyohyAztTH8ZQL9WCxKpA6dvTG_TUIhQUFq_n&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;keys&quot;</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        : {<br>
                        &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;p256dh&quot;</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>:</span><span lang=EN-US
                                                       style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;BLQELIDm-6b9Bl07YrEuXJ4BL_YBVQ0dvt9NQGGJxIQidJWHPNa9YrouvcQ9d7_MqzvGS9Alz60SZNCG3qfpk=&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;auth&quot;</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>:</span><span lang=EN-US
                                                       style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;4vQK-SvRAN5eo-8ASlrwA==&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        &nbsp; &nbsp; }<br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        How does
                        the push service know which client to send the message to? The endpoint URL
                        contains a unique identifier. This identifier is used to route the message that
                        you send to the correct device, and when processed by the browser, identifies
                        which service worker should handle the request.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        identifier is opaque. As a developer, you can't determine any personal data
                        from it. Also, it is not stable, so it can't be used to track users.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Because
                        push notifications are paired with a service worker, apps that use push
                        notifications must be on HTTPS. This ensures that the communication channel
                        between your server and the push service is secure, and from the push service
                        to the user is also secure.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        However,
                        HTTPS doesn't ensure that the push service itself is secure. We must be sure
                        that the data sent from your server to the client is not tampered with or
                        directly inspected by any third party. You must encrypt the message payload on
                        your server.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        following summarizes the process of sending and receiving a push message and
                        then displaying a push notification.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        On the
                        client:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Subscribe
                        to the push service
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Send
                        the subscription object to the server
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        On the
                        server:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Generate
                        the data that we want to send to the user
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Encrypt
                        the data with the user public key
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Send
                        the data to the endpoint URL with a payload of encrypted data.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        message is routed to the user's device. This wakes up the browser, which finds
                        the correct service worker and invokes a &quot;push&quot; event.
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Now, on
                        the client:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Receive
                        the message data (if there is any) in the &quot;push&quot; event
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Perform
                        some custom logic in the push event
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Show a
                        notification
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        That
                        completes the path from server push to user notification. Let's look at each
                        part. We'll start with receiving the message in the service worker, since
                        that's the simplest, and then move on to subscribing to the push service and
                        sending the push message from the server.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Handling
                        the push event in the service worker
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Let's see
                        how the service worker handles push messages. The service worker both receives
                        the push message and creates the notification.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When
                        a&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://caniuse.com/#search=notification">
                            <span lang=EN-US style='color:#1A73E8'>browser that supports push messages</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;receives
                        a message, it sends a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>push</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;event to the service
                        worker. We can create a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>push</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;event listener in
                        the service worker to handle the message:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>.addEventListener(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'push'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (e)
                        {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        options = {<br>
                        &nbsp; &nbsp; body:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#0D904F'>'This notification was generated from a push!'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; icon:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#0D904F'>'images/example.png'</span><span lang=EN-US
                                                              style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; vibrate: [
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#C53929'>100</span><span lang=EN-US
                                                         style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>50</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>100</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ],<br>
                        &nbsp; &nbsp; data: {<br>
                        &nbsp; &nbsp; &nbsp; dateOfArrival:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#9C27B0'>Date</span><span lang=EN-US
                                                                 style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .now(),<br>
                        &nbsp; &nbsp; &nbsp; primaryKey:
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'2'</span><span lang=EN-US
                                                         style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        &nbsp; &nbsp; },<br>
                        &nbsp; &nbsp; actions: [<br>
                        &nbsp; &nbsp; &nbsp; {action:
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'explore'</span><span lang=EN-US
                                                               style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, title: </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Explore
                        this new world'
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; icon:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>'images/checkmark.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        },<br>
                        &nbsp; &nbsp; &nbsp; {action:
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'close'</span><span lang=EN-US
                                                             style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, title: </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'Close'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; icon:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>'images/xmark.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        },<br>
                        &nbsp; &nbsp; ]<br>
                        &nbsp; };<br>
                        &nbsp; e.waitUntil(<br>
                        &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>.registration.showNotification(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Hello
                        world!'
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        , options)<br>
                        &nbsp; );<br>
                        });<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        This code
                        is very similar to what we have covered before in this tutorial, the difference
                        being that this is happening inside the service worker in response to a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>push</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;event,
                        instead of in the app's main script.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Another
                        important difference is that the&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>showNotification</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method
                        is wrapped in an&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/waitUntil">
                            <span lang=EN-US style='font-size:11.0pt;font-family:"Courier New";color:#1A73E8;
background:#F1F3F4;text-decoration:none'>e.waitUntil</span><span lang=EN-US
                                                                 style='color:#1A73E8'>&nbsp;method</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        . This
                        extends the lifetime of the push event until the&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>showNotification</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;promise
                        resolves. In general, we use the&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>waitUntil</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method
                        to ensure the service worker doesn't terminate before an asynchronous operation
                        has completed.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Subscribing
                        to Push Notifications
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Before we
                        can send a push message we must first subscribe to a push service. Subscribing
                        returns a subscription object, or&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>subscription</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        .
                        The&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>subscription</span><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;is a critical piece of the
                        process to send push messages. It tells us, the developer, to which push
                        service we should send our push messages (remember, each browser will provide
                        their own push service). The subscription also details which client the push
                        service should route the messages to. Finally, the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>subscription</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;contains
                        the public key to encrypt the data so that it is delivered securely to the
                        user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        It is
                        your job to take this&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>subscription</span><span lang=EN-US
                                                           style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;object
                        and store it somewhere on your system. For instance, you might store it in a
                        database attached to a user object. In our examples, we will log results to the
                        console.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        First, we
                        need to check if we already have a&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>subscription</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;object
                        and update the UI accordingly.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'> (</span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'serviceWorker'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>in</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        navigator) {<br>
                        &nbsp; navigator.serviceWorker.
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>register</span><span lang=EN-US
                                                              style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'sw.js'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>).</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (reg)
                        {<br>
                        &nbsp; &nbsp; console.log(
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'Service Worker Registered!'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,
                        reg);<br>
                        <br>
                        &nbsp; &nbsp; reg.pushManager.getSubscription().
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>sub</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>if</span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> (</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>sub</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ===
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>null</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#D81B60'>
                        // Update UI to ask user to register
                        for Push
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        <br>
                        &nbsp; &nbsp; &nbsp; &nbsp; console.log(
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Not
                        subscribed to push service!'
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        );<br>
                        &nbsp; &nbsp; &nbsp; }
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>else</span><span lang=EN-US
                                                          style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#D81B60'>
                        // We have a subscription, update the
                        database
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        <br>
                        &nbsp; &nbsp; &nbsp; &nbsp; console.log(
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Subscription
                        object: '
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>sub</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        );<br>
                        &nbsp; &nbsp; &nbsp; }<br>
                        &nbsp; &nbsp; });<br>
                        &nbsp; })<br>
                        &nbsp; &nbsp;.
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>catch</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US
                                                              style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (err) {<br>
                        &nbsp; &nbsp; console.log(
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'Service Worker registration failed: '</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,
                        err);<br>
                        &nbsp; });<br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We should
                        perform this check whenever the user accesses our app because&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>subscription</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;objects
                        may change during their lifetime. We need to make sure that it is synchronized
                        with our server. If there is no&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>subscription</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;object
                        we can update our UI to ask the user if they would like receive notifications.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Assume
                        the user enabled notifications. Now we can subscribe to the push service:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        subscribeUser() {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> (</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'serviceWorker'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>in</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        navigator) {<br>
                        &nbsp; &nbsp; navigator.serviceWorker.ready.
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (reg)
                        {<br>
                        <br>
                        &nbsp; &nbsp; &nbsp; reg.pushManager.subscribe({<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; userVisibleOnly:
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>true</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        &nbsp; &nbsp; &nbsp; }).
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US
                                                          style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>sub</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; console.log(
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Endpoint URL:
                        '
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>sub</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        .endpoint);<br>
                        &nbsp; &nbsp; &nbsp; }).
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>catch</span><span lang=EN-US
                                                           style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (e)
                        {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>if</span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> (</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Notification</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .permission
                        ===
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>'denied'</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.warn(
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Permission
                        for notifications was denied'
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        );<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; }
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>else</span><span lang=EN-US
                                                          style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        {<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.error(
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Unable to
                        subscribe to push'
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        , e);<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; }<br>
                        &nbsp; &nbsp; &nbsp; });<br>
                        &nbsp; &nbsp; })<br>
                        &nbsp; }<br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        It's best
                        practice to call the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>subscribeUser()</span><span lang=EN-US
                                                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;function
                        in response to a user action signalling they would like to subscribe to push
                        messages from our app.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        In the
                        above example we call the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:
"Arial",sans-serif;color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/PushManager/subscribe">
                            <span lang=EN-US style='font-size:11.0pt;font-family:"Courier New";color:#1A73E8;
background:#F1F3F4;text-decoration:none'>subscribe</span><span lang=EN-US
                                                               style='color:#1A73E8'>&nbsp;method</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;on
                        the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://developer.mozilla.org/en-US/docs/Web/API/PushManager">
                            <span lang=EN-US style='font-size:11.0pt;font-family:"Courier New";color:#1A73E8;
background:#F1F3F4;text-decoration:none'>pushManager</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;and
                        log the subscription object to the console.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Notice we
                        are passing a flag named&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>userVisibleOnly</span><span lang=EN-US
                                                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;to
                        the subscribe method. By setting this to&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>true</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        ,
                        the browser ensures that every incoming message has a matching (and visible)
                        notification.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;In
                        the current implementation of Chrome, whenever we receive a push message and we
                        don't have our site visible in the browser we must display a notification. That
                        is, we can't do it silently without the user knowing. If we don't display a
                        notification the browser automatically creates one to let the user know that
                        the app is doing work in the background.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        If the
                        user doesn't accept the permission request or there's another error, the
                        promise rejects.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We add a
                        catch clause to handle this, and then check the permission property on the
                        notification global object to understand why we can't display notifications.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The Web
                        Push Protocol
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Let's
                        look at how to send a push message to the browser using the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://datatracker.ietf.org/doc/draft-thomson-webpush-protocol/">
                            <span lang=EN-US style='color:#1A73E8'>Web Push Protocol</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>.</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The Web
                        Push protocol is the formal standard for sending push messages destined for the
                        browser. It describes the structure and flow of how to create your push
                        message, encrypt it, and send it to a Push messaging platform. The protocol
                        abstracts the details of which messaging platform and browser the user has.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The Web
                        Push protocol is complex, but we don't need to understand all of the details. The
                        browser automatically takes care of subscribing the user with the push service.
                        Our job, as developers, is to take the subscription token, extract the URL, and
                        send our message there.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Sending a
                        Push Message Using Firebase Cloud Messaging
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Chrome
                        currently uses&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://firebase.google.com/docs/cloud-messaging/">
                            <span lang=EN-US style='color:#1A73E8'>Firebase Cloud Messaging</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;(FCM)
                        as its push service.&nbsp;
                    </span><span style='font-size:12.0pt;font-family:
"Arial",sans-serif;color:#202124'>
                        <a href="https://developers.google.com/web/updates/2016/07/web-push-interop-wins">
                            <span lang=EN-US style='color:#1A73E8'>FCM recently adopted the Web Push protocol</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        .
                        FCM is the successor to Google Cloud Messaging (GCM) and supports the same
                        functionality and more.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        To use
                        Firebase Cloud Messaging, you need to set up a project on&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://firebase.google.com/"><span lang=EN-US style='color:#1A73E8'>Firebase</span></a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;(see
                        the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://developers.google.com/web/ilt/pwa/introduction-to-push-notifications#vapid">
                            <span lang=EN-US style='color:#1A73E8'>section on VAPID</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;to
                        get around this step).
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Here's how:</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        In
                        the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://console.firebase.google.com/">
                            <span lang=EN-US
                                  style='color:#1A73E8'>Firebase console</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        ,
                        select&nbsp;<b>Create New Project</b>.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Supply
                        a project name and click&nbsp;<b>Create Project</b>.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Click
                        the Settings icon next to your project name in the Navigation panel and
                        select&nbsp;<b>Project Settings</b>.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Open
                        the&nbsp;<b>Cloud Messaging</b>&nbsp;tab. You can find your&nbsp;<b>Server key</b>&nbsp;and&nbsp;<b>
                            Sender
                            ID
                        </b>&nbsp;in this page.
                    </span><span style='font-size:12.0pt;font-family:
"Arial",sans-serif;color:#202124'>Save these values.</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        For
                        Chrome to route FCM messages to the correct service worker, it needs to know
                        the Sender ID. Supply this by adding a&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>gcm_sender_id</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;property
                        to your app's&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>manifest.json</span><span lang=EN-US
                                                            style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;file.
                        For example, the manifest could look like this:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;name&quot;</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>: </span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        &quot;Push
                        Notifications app&quot;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;gcm_sender_id&quot;</span><span lang=EN-US
                                                     style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>: </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;370072803732&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>&nbsp;The&nbsp;</span><b>
                        <span lang=EN-US style='font-size:9.5pt;font-family:"Courier New";color:#01579B;
background:#E1F5FE'>gcm_sender_id</span>
                    </b><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;is required for
                        Chrome prior to version 52, Opera Android, and Samsung Internet.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        To get
                        FCM to push a notification without a payload to your web client, the request
                        must include the following:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>The subscription endpoint URL</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        The public Server key. FCM uses this to check whether the server
                        making the requests is actually allowed to send messages to the receiving user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        A
                        production site or app normally sets up a service to interact with FCM from
                        your server. Check out the&nbsp;
                    </span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://developers.google.com/web/fundamentals/engage-and-retain/push-notifications">
                            <span lang=EN-US style='color:#1A73E8'>Web Fundamentals documentation</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;for
                        more information.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We can
                        test push messaging in our app using&nbsp;
                    </span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://curl.haxx.se/docs/manpage.html">
                            <span lang=EN-US
                                  style='color:#1A73E8'>cURL</span>
                        </a>
                    </span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        . We can send an empty
                        message, called a &quot;tickle&quot;, to the push service, then the push
                        service sends a message to the browser. If the notification displays, then we
                        have done everything correctly and our app is ready to push messages from the
                        server.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Sending a
                        Message Using cURL
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The cURL
                        command that sends a request to FCM to issue a push message looks like this:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>curl </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>&quot;ENDPOINT_URL&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        --request
                        POST --header
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;TTL: 60&quot;</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'> --header </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        &quot;Content-Length:
                        0&quot;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        \<br>
                        --header
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;Authorization: key=SERVER_KEY&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        For
                        example:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>curl </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>
                        &quot;https://android.googleapis.com/gcm/send/fYFVeJQJ2CY:APA91bGrFGRmy-sY6NaF8a...gls7HZcwJL4
                        \<br>
                        LFxjg0y0-ksEhKjpeFC5P&quot;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'> --request POST --header </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        &quot;TTL:
                        60&quot;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'> --header </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>&quot;Content-Length: 0&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        \<br>
                        &nbsp;--header
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#0D904F'>
                        &quot;Authorization:
                        key=AIzaSyD1JcZ8WM1vTtH6Y0tXq_Pnuw4jgj_92yg&quot;
                    </span><span lang=EN-US
                                 style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        You can
                        send a message to Firefox using the same cURL command, but without the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>Authorization</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>&nbsp;header:</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>curl </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>&quot;ENDPOINT_URL&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        --request
                        POST --header
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;TTL: 60&quot;</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'> --header </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        &quot;Content-Length:
                        0&quot;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        --header<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        For
                        example:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>curl </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>&quot;https://updates.push.services.mozilla.com/wpush/v1/gAAAAABYGml8oAFQC2a-HYb...7hKVui9zuT&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        \<br>
                        --request POST --header
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>&quot;TTL: 60&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        --header
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;Content-Length: 0&quot;</span><span lang=EN-US
                                                         style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Working
                        with Data Payloads
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        It's
                        relatively easy to get a push message to the user. However, so far the
                        notifications we have sent have been empty. Chrome and Firefox support the
                        ability to deliver data to your service worker using the push message.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Receiving
                        Data in the Service Worker
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Let's
                        first look at what changes are needed in the service worker to pull the data
                        out of the push message.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>.addEventListener(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'push'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (e)
                        {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        body;<br>
                        <br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        (e.data) {<br>
                        &nbsp; &nbsp; body = e.data.text();<br>
                        &nbsp; }
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>else</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        {<br>
                        &nbsp; &nbsp; body =
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'Push message no payload'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ;<br>
                        &nbsp; }<br>
                        <br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        options = {<br>
                        &nbsp; &nbsp; body: body,<br>
                        &nbsp; &nbsp; icon:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#0D904F'>'images/notification-flat.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; vibrate: [
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#C53929'>100</span><span lang=EN-US
                                                         style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>50</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>100</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ],<br>
                        &nbsp; &nbsp; data: {<br>
                        &nbsp; &nbsp; &nbsp; dateOfArrival:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#9C27B0'>Date</span><span lang=EN-US
                                                                 style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .now(),<br>
                        &nbsp; &nbsp; &nbsp; primaryKey:
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#C53929'>1</span><span lang=EN-US
                                                       style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        &nbsp; &nbsp; },<br>
                        &nbsp; &nbsp; actions: [<br>
                        &nbsp; &nbsp; &nbsp; {action:
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'explore'</span><span lang=EN-US
                                                               style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, title: </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Explore
                        this new world'
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; icon:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>'images/checkmark.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        },<br>
                        &nbsp; &nbsp; &nbsp; {action:
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'close'</span><span lang=EN-US
                                                             style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, title: </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'I
                        don\'t want any of this'
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; &nbsp; &nbsp; icon:
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#0D904F'>'images/xmark.png'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        },<br>
                        &nbsp; &nbsp; ]<br>
                        &nbsp; };<br>
                        &nbsp; e.waitUntil(<br>
                        &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>.registration.showNotification(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Push
                        Notification'
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        , options)<br>
                        &nbsp; );<br>
                        });<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When we
                        receive a push notification with a payload, the data is available directly on
                        the event object. This data can be of any type, and you can access the data as
                        a JSON result, a BLOB, a typed array, or raw text.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Sending
                        the message from the Server
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        In this
                        section, we cover how to send a push message from the server.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        In order
                        to send data, the push message must be encrypted with the key information from
                        the subscription object. As with anything related to encryption, it's usually
                        easier to use an actively maintained library than to write your own code.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We are
                        using Mozilla's&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://www.npmjs.com/package/web-push">
                            <span lang=EN-US style='color:#1A73E8'>web-push library</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;for
                        Node.js. This handles both encryption and the web push protocol, so that
                        sending a push message from a Node.js server is simple:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        webpush.sendNotification(pushSubscription, payload,
                        options)<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The first
                        argument is the the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>subscription</span><span lang=EN-US
                                                           style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;object.
                        The second argument is the&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>payload</span><span lang=EN-US
                                                                    style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        . The
                        third is an&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>options</span><span lang=EN-US
                                                      style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;object
                        that contains various options to configure the message. See&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://github.com/web-push-libs/web-push/">
                            <span lang=EN-US
                                  style='color:#1A73E8'>the documentation</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;for
                        details.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        While we
                        recommend using a library, this is a new feature and there are many popular
                        languages that don't yet have any libraries. Here is a list of some
                        available&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://github.com/web-push-libs">
                            <span lang=EN-US
                                  style='color:#1A73E8'>web-push libraries</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;for
                        various languages. If you do need to implement encryption manually, use Peter
                        Beverloo's&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://tests.peter.sh/push-encryption-verifier/">
                            <span lang=EN-US style='color:#1A73E8'>encryption verifier</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>.</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We now
                        have all the client side components in place, so let's create a simple
                        server-side script using Node.js that imports the web-push library and then
                        uses our subscription object to send a message to the client.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        To
                        install web-push in the app from the command window we run:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        $ npm install web-push<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The node
                        script looks like this:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>node/main.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'> webPush = </span><span lang=EN-US
                                                                 style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>require</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'web-push'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        );<br>
                        <br>
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> pushSubscription = {</span><span lang=EN-US
                                                               style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;endpoint&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>:</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;https://android.googleapis.com/gcm/send/f1LsxkKphfQ:APA91bFUx7ja4BK4JVrNgVjpg1cs9lGSGI6IMNL4mQ3Xe6mDGxvt_C_gItKYJI9CAx5i_Ss6cmDxdWZoLyhS2RJhkcv7LeE6hkiOsK6oBzbyifvKCdUYU7ADIRBiYNxIVpLIYeZ8kq_A&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;keys&quot;</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>:{</span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;p256dh&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>:</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;BLc4xRzKlKORKWlbdgFaBrrPK3ydWAHo4M0gs0i1oEKgPpWC5cW8OCzVrOQRv-1npXRWk8udnW3oYhIO4475rds=&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;auth&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>:</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;5I2Bu2oKdyy9CwL8QVF0NQ==&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        }};<br>
                        <br>
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> payload = </span><span lang=EN-US
                                                     style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Here is a
                        payload!'
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        ;<br>
                        <br>
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>var</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        options = {<br>
                        &nbsp; gcmAPIKey:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#0D904F'>'AIzaSyD1JcZ8WM1vTtH6Y0tXq_Pnuw4jgj_92yg'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; TTL:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#C53929'>60</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        <br>
                        };<br>
                        <br>
                        webPush.sendNotification(<br>
                        &nbsp; pushSubscription,<br>
                        &nbsp; payload,<br>
                        &nbsp; options<br>
                        );<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        This
                        example passes the subscription object, payload, and server key into the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>sendNotification</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method.
                        It also passes in a time-to-live, which is the value in seconds that describes
                        how long a push message is retained by the push service (by default, four
                        weeks).
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Identifying
                        Your Service with VAPID Auth
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The Web
                        Push Protocol has been designed to respect the user's privacy by keeping users
                        anonymous and not requiring strong authentication between your app and the push
                        service.
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>This presents some challenges:</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        An unauthenticated push service is exposed to a greater risk of
                        denial of service attack
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        Any application server in possession of the endpoint is able to
                        send messages to your users
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        There's no way for the push service to contact the developer if
                        there are problems
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        solution is to have the publisher optionally identify themselves using
                        the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://tools.ietf.org/html/draft-ietf-webpush-vapid-01">
                            <span lang=EN-US style='color:#1A73E8'>
                                Voluntary Application Server Identification
                                for Web Push (VAPID) protocol
                            </span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        . At a
                        minimum, this provides a stable identity for the application server, though
                        this could also include contact information, such as an email address.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The spec
                        lists several benefits of using VAPID:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        A consistent identity can be used by a push service to establish
                        behavioral expectations for an application server. Significant deviations from
                        an established norm can then be used to trigger exception handling procedures.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        Voluntarily-provided contact information can be used to contact
                        an application server operator in the case of exceptional situations.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        Experience with push service deployment has shown that software
                        errors or unusual circumstances can cause large increases in push message
                        volume. Contacting the operator of the application server has proven to be
                        valuable.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        Even in the absence of usable contact information, an
                        application server that has a well-established reputation might be given
                        preference over an unidentified application server when choosing whether to
                        discard a push message.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Using
                        VAPID also lets you avoid the FCM-specific steps for sending a push message.
                        You no longer need a Firebase project, a&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>gcm_sender_id</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        ,
                        or an&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>Authorization</span><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>&nbsp;header.</span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Using
                        VAPID
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        process is pretty simple:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Your
                        application server creates a public/private key pair. The public key is given
                        to your web app.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When
                        the user elects to receive pushes, add the public key to the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>subscribe()</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;call's
                        options object.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When
                        your app server sends a push message, include a signed JSON web token along
                        with the public key.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Let's
                        look at these steps in detail.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;We
                        recommend using a&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://github.com/web-push-libs">
                            <span lang=EN-US
                                  style='color:#01579B;background:#E1F5FE'>library</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;to
                        implement VAPID in your push messages. This spares you from the details of
                        encryption and JWT signing. We show an&nbsp;
                    </span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://developers.google.com/web/ilt/pwa/introduction-to-push-notifications#webpushvapid">
                            <span lang=EN-US style='color:#01579B;background:#E1F5FE'>example</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;using
                        the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://github.com/web-push-libs/web-push">
                            <span lang=EN-US style='color:#01579B;background:#E1F5FE'>web-push library</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;for
                        Node.js at the end of this section.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Create a
                        public/private key pair
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Here's
                        the relevant section from the spec regarding the format of the VAPID
                        public/private keys:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <i>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                            Application
                            servers SHOULD generate and maintain a signing key pair usable with elliptic
                            curve digital signature (ECDSA) over the P-256 curve.
                        </span>
                    </i>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        You can
                        see how to do this in the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:
"Arial",sans-serif;color:#202124'>
                        <a href="https://github.com/web-push-libs/web-push">
                            <span lang=EN-US
                                  style='color:#1A73E8'>web-push node library</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>:</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        generateVAPIDKeys() {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>const</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        vapidKeys = webpush.generateVAPIDKeys();<br>
                        <br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>return</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        {<br>
                        &nbsp; &nbsp; publicKey: vapidKeys.publicKey,<br>
                        &nbsp; &nbsp; privateKey: vapidKeys.privateKey,<br>
                        &nbsp; };<br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Subscribing
                        with the public key
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        To
                        subscribe a Chrome user for push with the VAPID public key, pass the public key
                        as a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>Uint8Array</span><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>&nbsp;using the&nbsp;</span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>applicationServerKey</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;parameter
                        of the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>subscribe()</span><span lang=EN-US
                                                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>&nbsp;method.</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>const</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'> publicKey = </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>new</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Uint8Array</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>([</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>0x4</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>0x37</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>0x77</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>0xfe</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        , ....
                        ]);<br>
                        serviceWorkerRegistration.pushManager.subscribe(<br>
                        &nbsp; {<br>
                        &nbsp; &nbsp; userVisibleOnly:
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>true</span><span lang=EN-US
                                                          style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp; applicationServerKey: publicKey<br>
                        &nbsp; }<br>
                        );<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        You'll
                        know if it has worked by examining the endpoint in the resulting subscription
                        object; if the origin is&nbsp;<b>fcm.googleapis.com</b>, it's working.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;Even
                        though this is an FCM URL, use the&nbsp;
                    </span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://tools.ietf.org/html/draft-ietf-webpush-protocol-12">
                            <span lang=EN-US style='color:#01579B;background:#E1F5FE'>Web Push Protocol</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;<b>not</b>&nbsp;the
                        FCM protocol, this way your server-side code will work for any push service.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Sending a
                        push message
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        To send a
                        message using VAPID, you make a normal Web Push Protocol request with two
                        additional HTTP headers: an&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>Authorization</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;header
                        and a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>Crypto-Key</span><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;header. Let's look at these
                        new headers in detail.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;This
                        is where web push&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://github.com/web-push-libs">
                            <span lang=EN-US
                                  style='color:#01579B;background:#E1F5FE'>libraries</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;really
                        shine, as the process of signing and sending a message can be quite complex. We
                        include an&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://developers.google.com/web/ilt/pwa/introduction-to-push-notifications#webpushvapid">
                            <span lang=EN-US style='color:#01579B;background:#E1F5FE'>example</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;of
                        sending a message with VAPID using the&nbsp;
                    </span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://github.com/web-push-libs/web-push">
                            <span lang=EN-US
                                  style='color:#01579B;background:#E1F5FE'>web-push library</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;for
                        Node.js at the end of this section.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:10.5pt;font-family:"Arial",sans-serif;color:#202124'>
                            Authorization
                            header
                        </span>
                    </b>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>The&nbsp;</span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>Authorization</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;header
                        is a signed&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://jwt.io/">
                            <span lang=EN-US style='color:#1A73E8'>
                                JSON
                                Web Token (JWT)
                            </span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;with &quot;WebPush &quot;
                        in front of it.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        A JWT is
                        a way of sharing a JSON object with a second party in such a way that the
                        sending party can sign it and the receiving party can verify the signature is
                        from the expected sender. The structure of a JWT is three encrypted strings,
                        joined with a single dot between them.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>&lt;JWTHeader&gt;.&lt;Payload&gt;.&lt;Signature&gt;</span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:10.5pt;font-family:"Arial",sans-serif;color:#202124'>
                            JWT
                            header
                        </span>
                    </b>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The JWT
                        Header contains the algorithm name used for signing and the type of token. For
                        VAPID this must be:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>{</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  &quot;typ&quot;: &quot;JWT&quot;,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  &quot;alg&quot;: &quot;ES256&quot;</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>}</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        This is then
                        base64 url encoded and forms the first part of the JWT.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:10.5pt;font-family:"Arial",sans-serif;color:#202124'>Payload</span>
                    </b>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        Payload is another JSON object containing the following:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Audience (</span><span style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>aud</span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>)</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        This is the origin of the push service (NOT the origin of your
                        site). In JavaScript, you could do the following to get the audience:&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>
                        const
                        audience = new URL(subscription.endpoint).origin
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Expiration Time (</span><span style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>exp</span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>)</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        This is the number of seconds until the request should be
                        regarded as expired. This MUST be within 24 hours of the request being made, in
                        UTC.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Subject (</span><span style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>sub</span><span style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>)</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        The subject needs to be a URL or a mailto: URL. This provides a
                        point of contact in case the push service needs to contact the message sender.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        An
                        example payload could look like the following:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        {<br>
                        &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;aud&quot;</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>: </span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>&quot;http://push-service.example.com&quot;</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;exp&quot;</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>: </span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Math</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>.floor((</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Date</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        .now()
                        /
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#C53929'>1000</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>) + (</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#C53929'>12</span><span lang=EN-US
                                                               style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> * </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>60</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'> * </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>60</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        )),<br>
                        &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>&quot;sub&quot;</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>: </span><span lang=EN-US
                                                        style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        &quot;mailto:
                        my-email@some-url.com&quot;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        <br>
                        }<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        This JSON
                        object is base64 url encoded and forms the second part of the JWT.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:10.5pt;font-family:"Arial",sans-serif;color:#202124'>Signature</span>
                    </b>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        Signature is the result of joining the encoded header and payload with a dot
                        then encrypting the result using the VAPID private key you created earlier. The
                        result itself should be appended to the header with a dot.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        There are
                        a&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        <a href="https://jwt.io/#libraries-io">
                            <span lang=EN-US
                                  style='color:#1A73E8'>number of libraries</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;that
                        will take the header and payload JSON objects and generate this signature for
                        you.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        signed JWT is used as the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>Authorization</span><span lang=EN-US
                                                            style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;header,
                        with &quot;WebPush&quot; prepended to it, and looks something like the
                        following:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#9C27B0'>WebPush</span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#37474F'>
                        eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJhdWQiOiJodHRwczovL2ZjbS5nb29nbGVhcGlzLmNvbSIsImV4cCI6MTQ2NjY2ODU5NCwic3ViIjoibWFpbHRvOnNpbXBsZS1wdXNoLWRlbW9AZ2F1bnRmYWNlLmNvLnVrIn0.
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>Ec0VR8dtf5qb8Fb5Wk91br</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        -evfho9sZT6jBRuQwxVMFyK5S8bhOjk8kuxvilLqTBmDXJM5l3uVrVOQirSsjq0A<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        There are
                        a few things to point out here. First, the&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>Authorization</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;header
                        literally contains the word&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>WebPush</span><span lang=EN-US
                                                                    style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;and
                        should be followed by a space then the JWT. Also notice the dots separating the
                        JWT header, payload, and signature.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:10.5pt;font-family:"Arial",sans-serif;color:#202124'>
                            Crypto-Key
                            header
                        </span>
                    </b>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        As well
                        as the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>Authorization</span><span lang=EN-US
                                                            style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;header,
                        you must add your VAPID public key to the&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>Crypto-Key</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;header
                        as a base64 url encoded string with&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>p256ecdsa=</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;prepended
                        to it.
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>p256ecdsa=</span><span lang=EN-US
                                                    style='font-size:10.5pt;font-family:"Courier New";color:#9C27B0'>BDd3_hVL9fZi9Ybo2UUzA284WG5FZR30_95YeZJsiApwXKpNcF1rRPF3foIiBHXRdJI2Qhumhf6_LFTeZaNndIo</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When you
                        are sending a notification with encrypted data, you will already be using
                        the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>Crypto-Key</span><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;header, so to add the
                        application server key, you just need to add a comma before adding the above
                        content, resulting in:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>dh=</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#9C27B0'>BGEw2wsHgLwzerjvnMTkbKrFRxdmwJ5S_k7zi7A1coR_sVjHmGrlvzYpAT1n4NPbioFlQkIrTNL8EH4V3ZZ4vJE</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ,<br>
                        p256ecdsa=
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#9C27B0'>BDd3_hVL9fZi9Ybo2UUzA284WG5FZR30_95YeZJsiApwXKpNcF1rRPF3foIiBHXRdJI2Qhumhf6_LFTeZaN</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>Note:</span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;There
                        is a bug in Chrome prior to version 52 that requires the use of a semicolon
                        instead of a comma in the Crypto-key header.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>Examples</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Here's an
                        example cURL request using VAPID:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        curl
                        &quot;https://updates.push.services.mozilla.com/wpush/v1/gAAAAABXmk....dyR&quot;
                        --request POST --header &quot;TTL: 60&quot; --header &quot;Content-Length:
                        0&quot; --header &quot;Authorization: WebPush
                        eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJhdWQiOiJodHRwczovL2ZjbS5nb29nbGVhcGlzLmNvbSIsImV4cCI6MTQ2NjY2ODU5NCwic3ViIjoibWFpbHRvOnNpbXBsZS1wdXNoLWRlbW9AZ2F1bnRmYWNlLmNvLnVrIn0.Ec0VR8dtf5qb8Fb5Wk91br-evfho9sZT6jBRuQwxVMFyK5S8bhOjk8kuxvilLqTBmDXJM5l3uVrVOQirSsjq0A&quot;
                        --header &quot;Crypto-Key: p256ecdsa=BDd3_hVL9fZi9Ybo2UUzA284WG5FZR30_95YeZJsiApwXKpNcF1rRPF3foIiBHXRdJI2Qhumhf6_LFTeZaNndIo&quot;
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We've
                        added two new headers to the request: an Authorization header that is the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        <a href="https://en.wikipedia.org/wiki/Hash-based_message_authentication_code">
                            <span lang=EN-US style='color:#1A73E8'>HMAC signature</span>
                        </a>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;of
                        our JWT token, and the Crypto-key, which is our public key that is used to
                        determine if the JWT is valid.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Here is
                        an example of sending a payload with VAPID in a node script using the web-push
                        library:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>var webPush = require('web-push');</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>&nbsp;</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        var pushSubscription =
                        {&quot;endpoint&quot;:&quot;https://fcm.googleapis.com/fcm/send/c0NI73v1E0Y:APA91bEN7z2weTCpJmcS-MFyfbgjtmlAWuV5YaaNw625_Rq2-f0ZrVLdRPXKGm7B3uwfygicoCeEoWQxCKIxlL3RWG2xkHs6C8-H_cxq-4Z-isAiZ3ixo84-2HeXB9eUvkfNO_t1jd5s&quot;,&quot;keys&quot;:{&quot;p256dh&quot;:&quot;BHxSHtYS0q3i0Tb3Ni6chC132ZDPd5uI4r-exy1KsevRqHJvOM5hNX-M83zgYjp-1kdirHv0Elhjw6Hivw1Be5M=&quot;,&quot;auth&quot;:&quot;4a3vf9MjR9CtPSHLHcsLzQ==&quot;}};
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>&nbsp;</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        var vapidPublicKey =
                        'BAdXhdGDgXJeJadxabiFhmlTyF17HrCsfyIj3XEhg1j-RmT2wXU3lHiBqPSKSotvtfejZlAaPywJ9E-7AxXQBj4
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>';</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        var vapidPrivateKey =
                        'VCgMIYe2BnuNA4iCfR94hA6pLPT3u3ES1n1xOTrmyLw
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>';</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>&nbsp;</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>var payload = 'Here is a payload!';</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>&nbsp;</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>var options = {</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  vapidDetails: {</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    subject: 'mailto:example_email@example.com',</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    publicKey: vapidPublicKey,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    privateKey: vapidPrivateKey</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  },</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  TTL: 60</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>};</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>&nbsp;</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>webPush.sendNotification(</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  pushSubscription,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  payload,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  options</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>);</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We add
                        the VAPID object to the options parameter in the&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>sendNotification</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method.
                        It contains the subject (your email address) and the generated Public and
                        Private keys. The library takes care of encrypting the message, generating and
                        signing the JWT, and adding the&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>Authorization</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>&nbsp;and&nbsp;</span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>Crypto-Key</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;headers
                        to the request. See the&nbsp;
                    </span><span style='font-size:12.0pt;font-family:
"Arial",sans-serif;color:#202124'>
                        <a href="https://github.com/web-push-libs/web-push">
                            <span lang=EN-US
                                  style='color:#1A73E8'>web-push documentation</span>
                        </a>
                    </span><span lang=EN-US
                                 style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;for
                        more information on how to use the library.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:36.0pt;margin-right:0cm;margin-bottom:
18.0pt;margin-left:0cm;line-height:24.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:18.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Best
                        Practices
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        While
                        it's relatively simple to get notifications up and running, making an
                        experience that users really value is trickier. There are also many edge cases
                        to consider when building an experience that works well.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        This
                        lesson discusses best practices for implementing push notifications.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Using
                        Notifications Wisely
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Notifications
                        should be timely, precise, and relevant. By following these three rules, you'll
                        keep your users happier and increase their return visits.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>Timely</span>
                    </b><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;–
                        The notification should display at the right time. Use notifications primarily
                        for time-sensitive events, especially if these synchronous events involve other
                        people.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        For
                        instance, an incoming chat is a real-time and synchronous form of communication
                        (another user is actively waiting on your response). Calendar events are
                        another good example of when to use a notification to grab the user's
                        attention, because the event is imminent and often involves other people.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>Precise</span>
                    </b><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;–
                        Offer enough information so that the user can make a decision without clicking
                        through to the web page.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        In
                        particular, you should:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Keep it short</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Make the title and content specific</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Keep important information on the top and to the left</span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>Make the desired action the most prominent</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Because
                        users often give notifications only a quick glance, you can make their lives
                        easier with a well-chosen title, description, and icon. If possible, make the
                        icon match the context of the notification so users can identify it without
                        reading.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>Relevant</span>
                    </b><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;–
                        Make notifications relevant to the user's needs. If the user receives too many
                        unimportant notifications, they might turn them all off. So keep it personal.
                        If it's a chat notification, tell them who it's from.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Avoid
                        notifications that are not directed specifically at the user, or information
                        that is not truly time-sensitive. For instance, the asynchronous and undirected
                        updates flowing through a social network generally do not warrant a real-time
                        interruption.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Don't
                        create a notification if the relevant new information is currently on screen.
                        Instead, use the UI of the application itself to notify the user of new
                        information directly in context. For instance, a chat application should not
                        create system notifications while the user is actively chatting with another
                        user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Whatever
                        you do, don't use notifications for advertising of any kind.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Design
                        Notifications According to Best Principles
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        This
                        section provides best practices to make your notifications timely, precise, and
                        relevant.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        To show
                        notifications we need to prompt the user to give permission. But when is the
                        best time to do that?
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Geolocation
                        offers a good example of where we can look at people's experience with its
                        prompts. Although geolocation is a great API, many sites immediately prompt the
                        user for their location the instant that the page loads. This is a poor time to
                        ask. The user has no context for how to make an informed decision about
                        allowing access to this powerful piece of data, and users frequently deny this
                        request. Acceptance rates for this API can be as low as six percent.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        However,
                        when the user is presented with the prompt after an action such as clicking on
                        a locator icon, the acceptance rate skyrockets.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The same
                        applies to the push notifications. If you ask the user for permission to send
                        push notifications when they first land on your site, they might dismiss it.
                        Once they have denied permission, they can't be asked again. Case studies show
                        that when a user has context when the prompt is shown, they are more likely to
                        grant permission.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        following interaction patterns are good times to ask for permission to show
                        notifications:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        When the user is configuring their communication settings, you
                        can offer push notifications as one of the options.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        After the user completes a critical action that needs to deliver
                        timely and relevant updates to the user. For example, if the user purchased an
                        item from your site, you can offer to notify the user of delivery updates.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:10.0pt;font-family:Symbol;color:#202124'>
                        ·<span style='font:7.0pt "Times New Roman"'>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;
color:#202124'>
                        When the user returns to your site they are likely to be a
                        satisfied user and more understanding of the value of your service.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Another
                        pattern that works well is to offer a very subtle promotion area on the screen
                        that asks the user if they would like to enable notifications. Be careful not
                        to distract too much from your site's main content. Clearly explain the
                        benefits of what notifications offers the user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Managing
                        the Number of Notifications
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        It's not
                        unreasonable for a site to send the user lots of important and relevant
                        updates. However, if you don't build them correctly, they can become
                        unmanageable for the user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        A simple
                        technique is to group messages that are contextually relevant into one
                        notification. For example, if you are building a social app, group
                        notifications by sender and show one per person. If you have an auction site,
                        group notifications by the item being bid on.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        notification object includes a&nbsp;
                    </span><span lang=EN-US style='font-family:
"Courier New";color:#37474F;background:#F1F3F4'>tag</span><span lang=EN-US
                                                                style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;attribute
                        that is the grouping key. When creating a notification with a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>tag</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;and
                        there is already a notification with the same&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>tag</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;visible
                        to the user, the system automatically replaces it without creating a new
                        notification. For example:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        registration.showNotification('New message',
                        {body: 'New Message!', tag: 'id1' });
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Not
                        giving a second cue is intentional, to avoid annoying the user with continued
                        beeps, whistles and vibrations. To override this and continue to notify the
                        user, set the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>renotify</span><span lang=EN-US
                                                       style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;attribute
                        to true in the notification options object:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>registration.showNotification(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        '2
                        new messages'
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        , {<br>
                        &nbsp; body:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>'2 new Messages!'</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; tag:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#0D904F'>'id1'</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        ,<br>
                        &nbsp; renotify:
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>true</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        <br>
                        });<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When to
                        Show Notifications
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        If the
                        user is already using your application there is no need to display a
                        notification. You can manage this logic on the server, but it is easier to do
                        it in the push handler inside your service worker:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>.addEventListener(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'push'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (e)
                        {<br>
                        &nbsp; clients.matchAll().
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US
                                                          style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (c)
                        {<br>
                        &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>if</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> (c.length === </span><span lang=EN-US
                                                         style='font-size:10.5pt;font-family:"Courier New";color:#C53929'>0</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        ) {<br>
                        &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#D81B60'>// Show notification</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        &nbsp; &nbsp; &nbsp; e.waitUntil(<br>
                        &nbsp; &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#3B78E7'>self</span><span lang=EN-US
                                                          style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>.registration.showNotification(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>
                        'Push
                        notification'
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        )<br>
                        &nbsp; &nbsp; &nbsp; );<br>
                        &nbsp; &nbsp; }
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>else</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>
                        {<br>
                        &nbsp; &nbsp; &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#D81B60'>
                        // Send a message to the page to
                        update the UI
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#37474F'>
                        <br>
                        &nbsp; &nbsp; &nbsp; console.log(
                    </span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#0D904F'>'Application is already open!'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        );<br>
                        &nbsp; &nbsp; }<br>
                        &nbsp; });<br>
                        });<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>The&nbsp;</span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>clients</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;global
                        in the service worker lists all of the active push clients on this machine.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        If there
                        are no clients active, the user must be in another app. We should show a
                        notification in this case.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        If
                        there&nbsp;<i>are</i>&nbsp;active clients it means that the user has your site
                        open in one or more windows. The best practice is to relay the message to each
                        of those windows.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Hiding
                        Notifications on Page Focus
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When a
                        user clicks on a notification we may want to close all the other notifications
                        that have been raised by your site. In most cases you will be sending the user
                        to the same page that has easy access to the other data that is held in the
                        notifications.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We can
                        clear all notifications by iterating over the notifications returned from
                        the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>getNotifications</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;method on our
                        service worker registration and closing each:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
15.0pt;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;
font-family:"Courier New";color:#37474F'>.addEventListener(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#0D904F'>'notificationclick'</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>, </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (e)
                        {<br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#D81B60'>// do your notification magic</span><span lang=EN-US
                                                         style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        <br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#D81B60'>// close all notifications</span><span lang=EN-US
                                                      style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        <br>
                        &nbsp;
                    </span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";
color:#3B78E7'>self</span><span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>.registration.getNotifications().</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>then</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>(</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (notifications)
                        {<br>
                        &nbsp; &nbsp; notifications.forEach(
                    </span><span lang=EN-US style='font-size:
10.5pt;font-family:"Courier New";color:#3B78E7'>function</span><span lang=EN-US style='font-size:10.5pt;font-family:"Courier New";color:#37474F'>
                        (notification)
                        {<br>
                        &nbsp; &nbsp; &nbsp; notification.close();<br>
                        &nbsp; &nbsp; });<br>
                        &nbsp; });<br>
                        });<br>
                        <br>
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        If you
                        don't want to clear all of the notifications, you can filter based on the tag
                        by passing it into&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>getNotifications</span><span lang=EN-US
                                                               style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>:</span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        self.addEventListener('notificationclick',
                        function(e) {
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  // do your notification magic</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>&nbsp;</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  // close all notifications with tag of 'id1'</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  var options = {tag: 'id1'};</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        self.registration.getNotifications(options).then(function(notifications) {
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    notifications.forEach(function(notification) {</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>      notification.close();</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    });</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  });</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>});</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        You could
                        also filter out the notifications directly inside the promise returned
                        from&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>getNotifications</span><span lang=EN-US style='font-size:
12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        . For example, there might
                        be some custom data attached to the notification that you could use as your
                        filter-criteria.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Notifications
                        and Tabs
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Window
                        management on the web can often be difficult. Think about when you would want
                        to open a new window, or just navigate to the current open tab.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        When the
                        user clicks on the notification, you can get a list of all the open clients.
                        You can decide which one to reuse.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:18.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>serviceworker.js</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>
                        self.addEventListener('notificationclick',
                        function(e) {
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  clients.matchAll().then(function(clis) {</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    var client = clis.find(function(c) {</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>      c.visibilityState === 'visible';</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    });</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    if (client !== undefined) {</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>      client.navigate('some_url');</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>      client.focus();</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    } else {</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>      // there are no visible windows. Open one.</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>      clients.openWindow('some_url');</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>      notification.close();</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>    }</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>  });</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>});</span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The code
                        above looks for the first window with&nbsp;
                    </span><span lang=EN-US
                                 style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>visibilityState</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;set
                        to&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;
background:#F1F3F4'>visible</span><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        . If one is found it navigates
                        that client to the correct URL and focuses the window. If a window that suits
                        our needs is not found, it opens a new window.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Managing
                        Notifications at the Server
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        So far,
                        we've been assuming the user is around to see our notifications.
                    </span><span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        But
                        consider the following scenario:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        user's mobile device is offline
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Your
                        site sends user's mobile device a message for something time sensitive, such as
                        breaking news or a calendar reminder
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        user turns the mobile device on a day later. It now receives the push message.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        That
                        scenario is a poor experience for the user. The notification is neither timely
                        or relevant. Our site shouldn't display the notification because it's out of
                        date.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        You can
                        use the&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>time_to_live</span><span lang=EN-US
                                                           style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;(TTL)
                        parameter, supported in both HTTP and XMPP requests, to specify the maximum
                        lifespan of a message. The value of this parameter must be a duration from 0 to
                        2,419,200 seconds, corresponding to the maximum period of time for which FCM
                        stores and tries to deliver the message. Requests that don't contain this field
                        default to the maximum period of 4 weeks. If the message is not sent within the
                        TTL, it is not delivered.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Another
                        advantage of specifying the lifespan of a message is that FCM never throttles
                        messages with a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";
color:#37474F;background:#F1F3F4'>time_to_live</span><span lang=EN-US
                                                           style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;value
                        of 0 seconds. In other words, FCM guarantees best effort for messages that must
                        be delivered &quot;now or never&quot;. Keep in mind that a&nbsp;
                    </span><span lang=EN-US style='font-family:"Courier New";color:#37474F;background:#F1F3F4'>time_to_live</span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        &nbsp;value
                        of 0 means messages that can't be delivered immediately are discarded. However,
                        because such messages are never stored, this provides the best latency for
                        sending notifications.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Here is
                        an example of a JSON-formatted request that includes TTL:
                    </span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>{</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>   &quot;collapse_key&quot; : &quot;demo&quot;,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>   &quot;delay_while_idle&quot; : true,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>   &quot;to&quot; : &quot;xyz&quot;,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>   &quot;data&quot; : {</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>     &quot;key1&quot; : &quot;value1&quot;,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>     &quot;key2&quot; : &quot;value2&quot;,</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>   },</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'>   &quot;time_to_live&quot; : 3</span>
                </p>

                <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;line-height:
normal;background:#F1F3F4'>
                    <span lang=EN-US style='font-size:10.5pt;font-family:
"Courier New";color:#37474F'> },</span>
                </p>

                <p class=MsoNormal style='margin-top:24.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:21.0pt;background:white'>
                    <span lang=EN-US
                          style='font-size:15.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Managing
                        Redundant Notifications
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        What
                        should you do if the user can get the same notification in multiple places,
                        such as in a chat app?
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Consider
                        the following:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        user's mobile device is unavailable.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        site sends a message to the user's phone announcing a new email.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        The
                        user checks email on desktop and reads the new email.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Now
                        when the user turns their phone on, the push message is received but there is
                        no new email to show (and no visible notification on the site).
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        We don't
                        want to display redundant notifications that have been removed elsewhere, but
                        you currently have to display a notification to the user.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:12.0pt;margin-right:0cm;margin-bottom:
12.0pt;margin-left:0cm;line-height:normal;background:white'>
                    <span lang=EN-US
                          style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        There are
                        a number of options available to solve this:
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                            Show
                            the old notification
                        </span>
                    </b><span lang=EN-US style='font-size:12.0pt;
font-family:"Arial",sans-serif;color:#202124'>
                        , even if it's no longer
                        relevant. This looks like a small glitch of the clients being out of sync.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><b>
                        <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                            Handle
                            the push message without triggering a notification
                        </span>
                    </b><span lang=EN-US
                              style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        . Chrome
                        allows sites to&nbsp;<i>very occasionally</i>&nbsp;handle a push message
                        without triggering a notification. If this case occurs extremely rarely it may
                        be OK to do nothing.
                    </span>
                </p>

                <p class=MsoNormal style='margin-top:9.0pt;margin-right:0cm;margin-bottom:9.0pt;
margin-left:18.0pt;text-indent:-18.0pt;line-height:normal;background:white'>
                    <span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>
                    </span><span lang=EN-US style='font-size:12.0pt;font-family:"Arial",sans-serif;color:#202124'>
                        Ignore
                        the message from the server and&nbsp;<b>
                            replace the notification with a
                            fallback
                        </b>&nbsp;to be displayed if no other is available. For example, rather
                        than display the information from an email the user has already read you could
                        say &quot;We've updated your inbox&quot;.
                    </span>
                </p>

                <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

            </div>

        </div>
    </div>
